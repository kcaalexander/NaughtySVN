dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.52)

dnl We don't know the version number "staticly" so we use a dash here
AC_INIT(NaughtySVN, [-], http://naughtysvn.tigris.org/servlets/ProjectIssues)


NAUGHTYSVN_MAJOR_VERSION=0
NAUGHTYSVN_MINOR_VERSION=0
NAUGHTYSVN_MICRO_VERSION=2
NAUGHTYSVN_VERSION=$NAUGHTYSVN_MAJOR_VERSION.$NAUGHTYSVN_MINOR_VERSION.$NAUGHTYSVN_MICRO_VERSION
AC_SUBST(NAUGHTYSVN_MAJOR_VERSION)
AC_SUBST(NAUGHTYSVN_MINOR_VERSION)
AC_SUBST(NAUGHTYSVN_MICRO_VERSION)
AC_SUBST(NAUGHTYSVN_VERSION)

PACKAGE_NAME=NaughtySVN
PACKAGE_SHORTNAME=NSVN
PACKAGE_URL=http://www.naughtysvn.org
PACKAGE_BUGREPORT=http://naughtysvn.tigris.org/servlets/ProjectIssues
PACKAGE_TARNAME=naughtysvn
PACKAGE_VERSION=$NAUGHTYSVN_VERSION
PACKAGE_STRING="$PACKAGE_NAME $NAUGHTYSVN_VERSION"
AC_SUBST(PACKAGE_NAME)
AC_SUBST(PACKAGE_SHORTNAME)
AC_SUBST(PACKAGE_URL)
AC_SUBST(PACKAGE_BUGREPORT)
AC_SUBST(PACKAGE_TARNAME)
AC_SUBST(PACKAGE_VERSION)
AC_SUBST(PACKAGE_STRING)

AM_INIT_AUTOMAKE(NaughtySVN, $NAUGHTYSVN_VERSION)
AC_MSG_CHECKING([NaughtySVN version])
AC_MSG_RESULT($NAUGHTYSVN_VERSION)

AC_DEFINE(ARG_RECORD_SEPARATOR, 30, [Defining record seprarator])
AC_SUBST(ARG_RECORD_SEPARATOR)
AM_MAINTAINER_MODE
AC_CONFIG_HEADERS(config.h)

AC_DISABLE_STATIC
AC_ENABLE_SHARED
AC_PROG_LIBTOOL
AM_PROG_LIBTOOL
AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AM_LANGINFO_CODESET
gl_GLIBC21
AC_ISC_POSIX
AM_ICONV_LINKFLAGS_BODY
AM_ICONV_LINK
AM_ICONV
gt_LC_MESSAGES
AM_CHECK_SVN_HEADER
AM_CHECK_SVN_LIB

dnl AC_PATH_PROG(SVN_CONFIG, svn-config, no)
dnl if test "`cd $srcdir && pwd`" != "`pwd`" &&
dnl   test -x $srcdir/svn-config; then

dnl SVN_CONFIG = "`$srcdir/svn-config --cflags`"
dnl AC_MSG_CHECKING($SVN_CONFIG)
dnl fi
dnl else
dnl   AC_MSG_ERROR([$svn-config not found; required])
dnl fi

dnl Minimum versions of the libraries
GLIB_REQUIRED=2.6.0
GTK_REQUIRED=2.6.0
LIBGNOME_REQUIRED=2.6.0
LIBGNOMEUI_REQUIRED=2.6.0
GNOME_VFS_REQUIRED=2.9.0
LIBGLADE_REQUIRED=2.4.0
BONOBO_ACTIVATION_REQUIRED=1.0.0
LIBBONOBO_REQUIRED=2.6.0
LIBBONOBOUI_REQUIRED=2.6.0
NAUTILUS_REQUIRED=2.9.0
SVN_REQUIRED=1.3
GTKSPELL_REQUIRED=2.0.11

AC_SUBST(GLIB_REQUIRED)
AC_SUBST(GTK_REQUIRED)
AC_SUBST(LIBGNOME_REQUIRED)
AC_SUBST(LIBGNOMEUI_REQUIRED)
AC_SUBST(GNOME_VFS_REQUIRED)
AC_SUBST(LIBGLADE_REQUIRED)
AC_SUBST(BONOBO_ACTIVATION_REQUIRED)
AC_SUBST(LIBBONOBO_REQUIRED)
AC_SUBST(LIBBONOBOUI_REQUIRED)
AC_SUBST(NAUTILUS_REQUIRED)

PKG_CHECK_MODULES(glib,
        glib-2.0 >= $GLIB_REQUIRED
        gthread-2.0)
AC_SUBST(glib_CFLAGS)
AC_SUBST(glib_LIBS)

PKG_CHECK_MODULES(gtk,
        gtk+-2.0 >= $GTK_REQUIRED)
AC_SUBST(gtk_CFLAGS)
AC_SUBST(gtk_LIBS)

PKG_CHECK_MODULES(gnome,
        libgnome-2.0 >= $LIBGNOME_REQUIRED
        libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED
        gnome-vfs-2.0 >= $GNOME_VFS_REQUIRED
        gnome-vfs-module-2.0
        bonobo-activation-2.0 >= $BONOBO_ACTIVATION_REQUIRED)
AC_SUBST(gnome_CFLAGS)
AC_SUBST(gnome_LIBS)

PKG_CHECK_MODULES(libglade,
        libglade-2.0 >= $LIBGLADE_REQUIRED)
AC_SUBST(libglade_CFLAGS)
AC_SUBST(libglade_LIBS)



dnl Checking for gtkspell
AC_ARG_ENABLE(gtkspell,
              AC_HELP_STRING([--enable-gtkspell],
                             [Enable spell checker]),
              enable_gtkspell=$enableval, enable_gtkspell=no)

if test "$enable_gtkspell" = "yes" ; then
  PKG_CHECK_MODULES(gtkspell,
                    gtkspell-2.0 >= $GTKSPELL_REQUIRED)
  AC_DEFINE([HAVE_GTKSPELL], 1, [GTKSpell package.])
  AC_SUBST(gtkspell_CFLAGS)
  AC_SUBST(gtkspell_LIBS)
else
  AC_DEFINE([HAVE_GTKSPELL], 0, [GTKSpell package.])
fi

dnl Checking for apr-1-config, if not present fallback and check for apr-config
AC_PATH_PROG(APR_1_CONFIGTOOL, apr-1-config, no)
if test x"$APR_1_CONFIGTOOL" = xno; then
  AC_PATH_PROG(APR_CONFIGTOOL, apr-config, no)
  if test x"$APR_CONFIGTOOL" = xno; then
    AC_MSG_ERROR([apr-config/apr-1-config executable not found - should be installed with Apache])
  else
    AC_SUBST(APRCONFIGTOOL, "$APR_CONFIGTOOL")
  fi
else
  AC_SUBST(APRCONFIGTOOL, "$APR_1_CONFIGTOOL")
fi
AC_SUBST(APRCONFIGTOOL)

dnl Checking for pkill
AC_PATH_PROG(PKILLTOOL, pkill, no)
if test x"$PKILLTOOL" = xno; then
  AC_MSG_ERROR([pkill executable not found])
fi

PKG_CHECK_MODULES(NAUTILUS,
   libnautilus-extension >= $NAUTILUS_REQUIRED
   glib-2.0 >= $GLIB_REQUIRED)

AC_SUBST(NAUTILUS_CFLAGS)
AC_SUBST(NAUTILUS_LIBS)

dnl AC_MSG_CHECKING([for Subversion libraries])
dnl SVN_LIBS="`svn-config --libs`"
dnl here add check for Berkeley Db and SVN library

GETTEXT_PACKAGE=nsvn
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [Gettext package.])

dnl Add the languages which your application supports here.
ALL_LINGUAS=""
AM_GLIB_GNU_GETTEXT
AC_PROG_INTLTOOL

dnl Checking for gconf
dnl AC_ARG_ENABLE(schemas-install,
dnl AC_HELP_STRING([--disable-schemas-install],
dnl                [Disable installation of the gconf schemas]))

AC_ARG_ENABLE(maintainer-mode,
AC_HELP_STRING([--enable-maintainer-mode],
               [Turn on debugging and very strict compile-time warnings]),
[
     if test "$enableval" = "yes" ; then
       enable_maintainer=yes
     fi
])

AC_ARG_ENABLE(debug,
AC_HELP_STRING([--enable-debug],
               [Turn on debugging and compile time warnings]),
[
     if test "$enableval" = "yes" ; then
       enable_debugging="yes"
     else
       enable_debugging="no"
     fi
])

# make autoconnection work
CFLAGS="$CFLAGS -export-dynamic"

if test "$enable_maintainer" = "yes" ; then
  enable_debugging="yes"

  CFLAGS+="-DSVN_DEBUG -DAP_DEBUG -DNEON_SSL -DNEON_ZLIB -DNSVN_DEBUG "

  if test "$GCC" = "yes"; then
    CFLAGS+="-Wpointer-arith -Wwrite-strings -Wshadow -Wall -Wmissing-prototypes -Wmissing-declarations "
  fi
fi

if test "$enable_debugging" = "yes" ; then
  dnl If debugging enabled, we don't want optimization
  CFLAGS+=["`echo $CFLAGS' ' | sed -e 's/-O[^ ]* / /g'`"]
else
  dnl If debugging disabled, we will optimization
  if test "$enable_debugging" = "no" ; then
    CFLAGS+=["`echo $CFLAGS' ' | sed -e 's/-g[0-9]? / /g'`"]
  fi
fi


AM_CONDITIONAL(SCHEMAS_INSTALL, test x$enable_schemas_install != xno)

AC_PATH_PROG(GCONFTOOL, gconftool-2, no)
if test x"$GCONFTOOL" = xno; then
  AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
fi
AM_GCONF_SOURCE_2

# Where does nautilus keeps its datafiles
AC_SUBST(themedir, "\${datadir}/icons/gnome")

AC_OUTPUT([
Makefile
nautilus/Makefile
nautilus/48x48/Makefile
nautilus/48x48/emblems/Makefile
svn/Makefile
svn/libnaughtysvn.pc
pixmaps/Makefile
nsvn/Makefile
po/Makefile.in
packages/naughtysvn.spec
])

echo "

Configuration:

        Source code location:   ${srcdir}
        Compiler:               ${CC}
        Internal mkdtemp:       ${mkdtemp_missing}

"

